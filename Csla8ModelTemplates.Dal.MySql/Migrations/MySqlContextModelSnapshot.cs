// <auto-generated />
using System;
using Csla8ModelTemplates.Dal.MySql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Csla8ModelTemplates.Dal.MySql.Migrations
{
    [DbContext(typeof(MySqlContext))]
    partial class MySqlContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Csla8ModelTemplates.Entities.Folder", b =>
                {
                    b.Property<long?>("FolderKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("FolderName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("FolderOrder")
                        .HasColumnType("int");

                    b.Property<long?>("ParentKey")
                        .HasColumnType("bigint");

                    b.Property<long?>("RootKey")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("datetime");

                    b.HasKey("FolderKey");

                    b.HasIndex("ParentKey", "FolderOrder");

                    b.ToTable("Folders");
                });

            modelBuilder.Entity("Csla8ModelTemplates.Entities.Group", b =>
                {
                    b.Property<long?>("GroupKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("GroupCode")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("GroupName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("datetime");

                    b.HasKey("GroupKey");

                    b.HasIndex("GroupCode")
                        .IsUnique();

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Csla8ModelTemplates.Entities.GroupPerson", b =>
                {
                    b.Property<long?>("GroupKey")
                        .HasColumnType("bigint");

                    b.Property<long?>("PersonKey")
                        .HasColumnType("bigint");

                    b.HasKey("GroupKey", "PersonKey");

                    b.HasIndex("PersonKey");

                    b.ToTable("GroupPersons");
                });

            modelBuilder.Entity("Csla8ModelTemplates.Entities.Person", b =>
                {
                    b.Property<long?>("PersonKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("PersonCode")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("PersonName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("datetime");

                    b.HasKey("PersonKey");

                    b.HasIndex("PersonCode")
                        .IsUnique();

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Csla8ModelTemplates.Entities.Player", b =>
                {
                    b.Property<long?>("PlayerKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("PlayerCode")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("PlayerName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<long?>("TeamKey")
                        .HasColumnType("bigint");

                    b.HasKey("PlayerKey");

                    b.HasIndex("TeamKey", "PlayerCode")
                        .IsUnique();

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Csla8ModelTemplates.Entities.Team", b =>
                {
                    b.Property<long?>("TeamKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("TeamCode")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<Guid?>("TeamGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("TeamName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("datetime");

                    b.HasKey("TeamKey");

                    b.HasIndex("TeamCode")
                        .IsUnique();

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("Csla8ModelTemplates.Entities.Folder", b =>
                {
                    b.HasOne("Csla8ModelTemplates.Entities.Folder", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentKey");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Csla8ModelTemplates.Entities.GroupPerson", b =>
                {
                    b.HasOne("Csla8ModelTemplates.Entities.Group", "Group")
                        .WithMany("Persons")
                        .HasForeignKey("GroupKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Csla8ModelTemplates.Entities.Person", "Person")
                        .WithMany("Groups")
                        .HasForeignKey("PersonKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Csla8ModelTemplates.Entities.Player", b =>
                {
                    b.HasOne("Csla8ModelTemplates.Entities.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamKey");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Csla8ModelTemplates.Entities.Folder", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("Csla8ModelTemplates.Entities.Group", b =>
                {
                    b.Navigation("Persons");
                });

            modelBuilder.Entity("Csla8ModelTemplates.Entities.Person", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("Csla8ModelTemplates.Entities.Team", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
