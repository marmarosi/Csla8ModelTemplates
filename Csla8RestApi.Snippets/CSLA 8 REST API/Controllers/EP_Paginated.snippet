<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
    <CodeSnippet Format="1.0.0">
        <Header>
            <Title>Paginated List Endpoint ● Controller | Paginated list endpoint</Title>
            <Author>Mármarosi József</Author>
            <Description>Defines an endpoint to fetch a read-only paginated collection.</Description>
            <Shortcut>c8ep</Shortcut>
        </Header>
        <Snippet>
            <Code Language="CSharp">
                <![CDATA[#region Pagination

        /// <summary>
        /// Gets the specified page of $root_name$s.
        /// </summary>
        /// <param name="criteria">The criteria of the $root_name$ list.</param>
        /// <returns>The requested page of the $root_name$ list.</returns>
        [HttpGet("paginated")]
        [ProducesResponseType(typeof(PaginatedList<Paginated$ROOT_MODEL$ListItemDto>), StatusCodes.Status200OK)]
        public async Task<IActionResult> GetPaginated$ROOT_MODEL$List(
            [FromQuery] Paginated$ROOT_MODEL$ListCriteria criteria
            )
        {
            try
            {
                var list = await Paginated$ROOT_MODEL$List.GetAsync(Factory, criteria);
                return Ok(list.ToDto<PaginatedList<Paginated$ROOT_MODEL$ListItemDto>>());
            }
            catch (Exception ex)
            {
                return HandleError(ex);
            }
        }

        #endregion$end$]]>
            </Code>
            <Declarations>
                <Literal>
                    <ID>root_name</ID>
                    <ToolTip>The description of the root model in comments.</ToolTip>
                    <Default>root_name</Default>
                </Literal>
                <Literal>
                    <ID>ROOT_MODEL</ID>
                    <ToolTip>The name of the root model.</ToolTip>
                    <Default>ROOT_MODEL</Default>
                </Literal>
            </Declarations>
        </Snippet>
    </CodeSnippet>
</CodeSnippets>
