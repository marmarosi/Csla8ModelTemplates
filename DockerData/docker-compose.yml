version: '3.4'

# Create a volume for the database container to ensure data persists after the container is stopped.
volumes:
  datafiles:

services:
  # Database Service
  csla8modeltemplates.database:
    # Pull the latest MySQL image.
    image: mysql:8.0.22
    # Map port 3306 on the MySQL container to port 3306 in the host.
    ports:
      - "3306:3306"
    # Specify where the persisted data should be stored.
    volumes:
      - datafiles:/var/lib/mysql
      #- "~/sql-scripts/setup.sql:/docker-entrypoint-initdb.d/1.sql"
    restart: always
    # Specify environment variables for MySQL.
    environment: 
      MYSQL_ROOT_PASSWORD: v%gRTNEQV$
      MYSQL_USER: csla8mt
      MYSQL_PASSWORD: 1raCRcojsu8h5Qx1
      MYSQL_DATABASE: Csla8mt
  # API Service
  csla8modeltemplates.webapi:
    image: ${DOCKER_REGISTRY-}csla8modeltemplateswebapi
    build:
      context: .
      # Use the Docker file in that Directory.
      dockerfile: Csla8ModelTemplates.WebApi/Dockerfile
    # This service depends on the database service specifed above.
    depends_on: 
      - csla8modeltemplates.database
    # Map port 8888 in the API container to port 80 in the Api
    ports:
      - "8080:80"
      - "8081:443"
    restart: always
    # Specify environment variables for the API service.
    environment: 
      - DBHOST=database
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORT=8081
    #volumes:
    #  - ${APPDATA}/Microsoft/UserSecrets/:/root/.microsoft/usersecrets
    #  - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https/
